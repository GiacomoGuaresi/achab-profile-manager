name: Manual Electron Multi-Platform Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (e.g., 1.0.2-alpha.0)'
        required: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Bump version (only if different)
        shell: bash
        run: |
          VERSION="${{ github.event.inputs.version }}"
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if [ "$CURRENT_VERSION" != "$VERSION" ]; then
            npm version "$VERSION" --no-git-tag-version
          else
            echo "Version already set to $VERSION"
          fi

      - name: Generate changelog from commits
        id: changelog
        run: |
          VERSION="${{ github.event.inputs.version }}"
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          echo "CHANGELOG<<EOF" >> $GITHUB_ENV

          if [ -z "$PREV_TAG" ]; then
            echo "## $VERSION" >> $GITHUB_ENV
            git log --pretty=format:"- %s" >> $GITHUB_ENV
          else
            echo "## $VERSION" >> $GITHUB_ENV
            git log "$PREV_TAG"..HEAD --pretty=format:"- %s" >> $GITHUB_ENV
          fi

          echo "EOF" >> $GITHUB_ENV

      - name: Create and push git tag
        run: |
          VERSION="${{ github.event.inputs.version }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "v$VERSION"
          git push origin "v$VERSION"

      - name: Build React app
        run: npm run build

      - name: Build and publish Electron app
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npm run electron:build

      - name: Create GitHub release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh release create "v${{ github.event.inputs.version }}" \
            --title "v${{ github.event.inputs.version }}" \
            --notes "${{ env.CHANGELOG }}" \
            dist/*.exe dist/*.dmg dist/*.AppImage
